{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jahaney\\\\LearnReact\\\\contact-manager\\\\src\\\\components\\\\contacts\\\\EditContact.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\"; // import uuid from \"uuid\";\n\nimport axios from \"axios\";\n\nvar EditContact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditContact, _Component);\n\n  function EditContact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditContact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditContact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, e) {\n        var _this$state, name, email, phone;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, name = _this$state.name, email = _this$state.email, phone = _this$state.phone; //Check for Errors\n\n                if (!(name === \"\")) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _this.setState({\n                  errors: {\n                    name: \"Name is required\"\n                  }\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                if (!(email === \"\")) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _this.setState({\n                  errors: {\n                    email: \"E-mail is required\"\n                  }\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                if (!(phone === \"\")) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _this.setState({\n                  errors: {\n                    phone: \"Phone is required\"\n                  }\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 11:\n                _this.setState({\n                  name: \"\",\n                  email: \"\",\n                  phone: \"\",\n                  errors: {}\n                });\n\n                _this.props.history.push(\"/\");\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(EditContact, [{\n    key: \"componenetDidMount\",\n    value: function () {\n      var _componenetDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var id, res, contact;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = this.props.match.params.id;\n                _context2.next = 3;\n                return axios.get(\"https://jsonplaceholder.typicode.com/users/\".concat(id));\n\n              case 3:\n                res = _context2.sent;\n                contact = res.data;\n                this.setState({\n                  name: contact.name,\n                  email: contact.email,\n                  phone: contact.phone\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componenetDidMount() {\n        return _componenetDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          errors = _this$state2.errors;\n      return React.createElement(Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, function (value) {\n        var dispatch = value.dispatch;\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Edit Contact\"), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: _this2.onSubmit.bind(_this2, dispatch),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(TextInputGroup, {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Enter Name...\",\n          value: name,\n          onChange: _this2.onChange,\n          label: \"Name\",\n          error: errors.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(TextInputGroup, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Enter E-mail...\",\n          value: email,\n          onChange: _this2.onChange,\n          label: \"E-mail\",\n          error: errors.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(TextInputGroup, {\n          name: \"phone\",\n          type: \"text\",\n          placeholder: \"Enter Phone...\",\n          value: phone,\n          onChange: _this2.onChange,\n          label: \"Phone\",\n          error: errors.phone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Update Contact\",\n          className: \"btn btn-light btn-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })))));\n      });\n    }\n  }]);\n\n  return EditContact;\n}(Component);\n\nexport default EditContact;","map":{"version":3,"sources":["C:\\Users\\jahaney\\LearnReact\\contact-manager\\src\\components\\contacts\\EditContact.js"],"names":["React","Component","Fragment","Consumer","TextInputGroup","axios","EditContact","state","name","email","phone","errors","onSubmit","dispatch","e","preventDefault","setState","props","history","push","onChange","target","value","id","match","params","get","res","contact","data","bind"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componenetDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"E-mail is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <Fragment>\r\n              <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      onChange={this.onChange}\r\n                      label=\"Name\"\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter E-mail...\"\r\n                      value={email}\r\n                      onChange={this.onChange}\r\n                      label=\"E-mail\"\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      name=\"phone\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Phone...\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      label=\"Phone\"\r\n                      error={errors.phone}\r\n                    />\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n"]},"metadata":{},"sourceType":"module"}